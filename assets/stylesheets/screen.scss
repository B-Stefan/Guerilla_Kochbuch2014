/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */
@import "compass/reset";
@import "vendor/bootstrap/mixins";
@import "variables";


/**
   * Apply the .container class from Bootstrap
   */
@mixin make-container-fluid {
  @include container-fixed();

  @media (min-width: $screen-sm-min) {
    width: $container-sm;
  }
  @media (min-width: $screen-md-min) {
    width: $container-md;
  }
  @media (min-width: $screen-lg-min) {
    width: $container-lg;
  }
}


body {
  background-image: url('../images/guerilla_kochbuch_bg_content-typ1.jpg');
  background-position: center 0px;
  background-repeat: none;

  font-size: 20px;
  line-height: 30px;


  h2 {
    font-size: 40px;
    line-height: 45px;
    font-weight: bold;
    margin-bottom: 20px;
  }

  #mainframe {
    header {
      @include make-container-fluid;

      .logo {
        h1 {
          display: none;
        }

        img {
          height: 200px;
          width: 200px;
        }
        text-align: center;
        //Change size of the logo if the page is printed
      }

      #flame-animation {
        display: none;
      }
    }

    nav {

      padding-bottom: 20px;

      ul {
        @include make-row();
        $nav-item-lg-height: 200px;

        //Global properties for alle entrys in the nav
        li {

          height: 200px; // Default height
          padding-top: $nav-item-lg-height/2-$line-height-computed; // Default padding

          text-align: center;
          background-size: cover;
          background-repeat: no-repeat;

          //Handy, Small-Device
          @media (max-width: $screen-sm-min) {
            height: $nav-item-lg-height/2;
            padding-top: $nav-item-lg-height/4-$line-height-computed;
          }

          &#navi-container-long {
            background-image: url('../images/placeholder.jpg');
          }
          &#navi-container-small1 {
            background-image: url('../images/placeholder.jpg');
          }
          &#navi-container-small2 {
            background-image: url('../images/placeholder.jpg');
          }
          &#navi-container-small3 {
            background-image: url('../images/placeholder.jpg');
          }
        }

        //The big nav
        &.big {
          li {
            @include make-lg-column(12, 0); // 0 padding, because the li element don't accepts any other
          }
        }

        //The small nav
        &.small {
          li {
            @include make-md-column(4, 0);
            @include make-lg-column(4, 0); // 0 padding, because the li element don't accepts any other

          }
        }
      }
    }

    section {

      &.contain-typ-1 {
        padding-top: 20px;

        article {
          padding-top: 20px;
          padding-bottom: 20px;

          h2 {
            line-height: 30px;
          }
        }
      }

      &.content-typ-2 {
        padding-top: 30px;
        padding-bottom: 30px;

        background-image: url('../images/guerilla_kochbuch_bg_content-typ2.jpg');
        background-position: center top;

        h2 {
          color: #7d0d0d;
           text-transform: uppercase;
        }

        .makings {
          padding-left: 20px;
          list-style-image: url('../images/guerilla_kochbuch_listicon.svg');
        }

      }
    }

    /**
    * Contains all styles for a simple article
    *
    */
    article {
      @include make-container-fluid;

      padding-bottom: 30px;
      color: white;
      padding: 0px;

      //Content
      .right {
        @include make-xs-column(12, 0);
        @include make-sm-column(12, 0);
        @include make-md-column(7, 0);
        @include make-lg-column(7, 0);
      }

      .left {
        @include make-md-column(5, 0);
        @include make-lg-column(5, 0);

        //Responsive image width
        /**
        *
        * Example for lg screens: $container-lg/$grid-columns*3-10 =>   1200  /   12  *   3                   -10
        *                                                              [Column width ]    emmit make-row(3)   Because some place for margin
        */
        img {
          //width: 80%;

          &.content-icon-fist {
            display: block;
            margin-left: auto;
            margin-right: auto;

            opacity: .8;
          }

          @media (min-width: $screen-sm-min) {
            max-width: $container-sm/$grid-columns*3-10;
          }
          @media (min-width: $screen-md-min) {
            max-width: $container-md/$grid-columns*3-10;
          }
          @media (min-width: $screen-lg-min) {
            max-width: $container-lg/$grid-columns*3-10;

          }
        }
      }

      //Image or some other aditional information
      aside {
        margin: 0px;

        @media (max-width: $screen-sm-max) {
          display: none;
        }
      }
    }



    /**
    * Style for separation line
    */
    .separator-star {
      width: 100%;
      height: 15px;
      background-color: $guerilla-separator-star-bg;

      img {
        display: block;
        margin-left: auto;
        margin-right: auto;

        position: relative;
        top: -25px
      }
    }
    
  }
}